
<robot name="redcar_base" xmlns:xacro="http://www.ros.org/wiki/xacro">
    
    <xacro:property name="PI" value="3.1415926535"/>
    
    <xacro:property name="base_footprint_radius" value="0.0001" />
    <xacro:property name="base_link_length" value="0.85" />
    <xacro:property name="base_link_width" value="0.68" />
    <xacro:property name="base_link_height" value="0.55" />
    <xacro:property name="earth_space" value="0.1" />

    <xacro:property name="base_link_m" value="0.5" />


    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${base_footprint_radius}" />
            </geometry>
        </visual>
    </link>


    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_link_length} ${base_link_width} ${base_link_height}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="red">
                <color rgba="1.0 0.0 0.0 0.3" />
            </material>
        </visual>

        <collision>
            <geometry>
                <box size="${base_link_length} ${base_link_width} ${base_link_height}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:Box_inertial_matrix m="${base_link_m}" l="${base_link_length}" w="${base_link_width}" h="${base_link_height}" />

    </link>

    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${earth_space + base_link_height / 2 }" />
    </joint>

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>



    <xacro:property name="wheel_radius" value="0.1" />
    <xacro:property name="wheel_length" value="0.12" />

    <xacro:property name="wheel_m" value="0.5" />


    <xacro:macro name="add_wheels" params="name flag">
      <link name="${name}_wheel">
          <visual>
              <geometry>
                  <cylinder radius="${wheel_radius}" length="${wheel_length}" />
              </geometry>
              <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
              <material name="black">
                  <color rgba="0 0 0 1"/>
              </material>
          </visual>

          <collision>
              <geometry>
                  <cylinder radius="${wheel_radius}" length="${wheel_length}" />
              </geometry>
              <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
          </collision>
          <xacro:cylinder_inertial_matrix m="${wheel_m}" r="${wheel_radius}" h="${wheel_length}" />

      </link>

      <joint name="${name}_wheel_joint" type="continuous">
          <parent link="base_link" />
          <child link="${name}_wheel" />
          <origin xyz="-0.175 ${flag * (base_link_width / 2)} ${-(base_link_height / 2)}" />
          <axis xyz="0 1 0" />
      </joint>

      <gazebo reference="${name}_wheel">
          <material>Gazebo/Black</material>
      </gazebo>

    </xacro:macro>
    <xacro:add_wheels name="left" flag="1" />
    <xacro:add_wheels name="right" flag="-1" />


    <xacro:property name="support_wheel_radius" value="0.1" />
    
    <xacro:property name="support_wheel_m" value="0.03" />
    
    <link name="front_wheel">
        <visual>
            <geometry>
                <sphere radius="${support_wheel_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
      
        <collision>
            <geometry>
                <sphere radius="${support_wheel_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:sphere_inertial_matrix m="${support_wheel_m}" r="${support_wheel_radius}" />

    </link>

    <joint name="front_wheel2base_link" type="continuous">
        <parent link="base_link" />
        <child link="front_wheel" />
        <origin xyz="${(base_link_length / 2) - support_wheel_radius} 0 ${- (base_link_height / 2)}" rpy="0 0 0"/>
        <axis xyz="1 1 1" />
    </joint>
    
    <gazebo reference="front_wheel">
        <material>Gazebo/Black</material>
    </gazebo>

    
</robot>
